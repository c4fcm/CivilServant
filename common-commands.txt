############################################
## COMMON SHELL COMMANDS FOR CivilServant ##
############################################

##### ENVIRONMENT VARIABLES #####

# Load logging environment variables
# (run this as a matter of course)
source config/environment_variables.sh

# set the environment
export CS_ENV=development

##### RUNNING SERVICES #####

## Reddit API queries:
## CivilServant requires praw-multiprocess
## which is kept up via supervise
## make sure you have a praw.ini
supervise prawserver
## or alternatively
praw-multiprocess

## Job Queue:
## CivilServant requires redis, which should be
## run in the background. It also requires redis-queue
## which can be run with the following set of commands
## (remember to set the above environment variables)
rq worker <<development, production>>

## Scheduling is handled with rqscheduler
## which needs to be kept running
rqscheduler

## TO RUN CivilServantBot2
## export CS_ENV=CivilServantBot2
## rq worker CivilServantBot2

## TO CHANGE THE QUEUE TIMEOUT
## 3venv/lib/python3.5/site-packages/rq/queue.py
## DEFAULT_TIMEOUT = 600 (originally 180)

##### DEVELOPMENT PROCESS #####

## THE ALEMBIC MIGRATIONS ARE NOW KEYED
## TO THE CONTENTS OF CS_ENV VARIABLE
##     options: development, test, production
export CS_ENV=development 

## MIGRATING WITH ALEMBIC

alembic upgrade head

alembic upgrade +2

alembic downgrade -1

## AUTO-GENERATE ALEMBIC MIGRATION:
# before running this command, you should run
# export CS_ENV=all
alembic revision --autogenerate -m "MESSAGE"

##### MONITORING STATUS #####

## Monitoring the redis-queue
rq-dashboard

## Monitoring errors
civilservant-error-handler.herokuapp.com

## Monitoring errors and info, locally
./logs

## INITIATE A STICKY COMMENT EXPERIMENT
import app.controller
app.controller.initialize_sticky_comment_experiment("experiment_file_name") #omit yml
